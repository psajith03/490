{"ast":null,"code":"var _jsxFileName = \"/home/p/490/app/front/src/components/FullRecommendation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullRecommendation = () => {\n  _s();\n  const [splitType, setSplitType] = useState(\"\");\n  const [workoutPlan, setWorkoutPlan] = useState({});\n  const fetchWorkoutPlan = async () => {\n    if (!splitType) {\n      alert(\"Please select a workout split.\");\n      return;\n    }\n    try {\n      const response = await axios.get(\"/api/full_recommendation\", {\n        params: {\n          split_type: splitType\n        }\n      });\n      setWorkoutPlan(response.data.workout_plan);\n    } catch (error) {\n      console.error(\"Error fetching workout plan:\", error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Your Full Workout Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: splitType,\n      onChange: e => setSplitType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"total_body\",\n        children: \"Total Body Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"upper_lower\",\n        children: \"Upper vs. Lower Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"push_pull_legs\",\n        children: \"Push vs. Pull vs. Legs Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"bro_split\",\n        children: \"Bro Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWorkoutPlan,\n      children: \"Generate Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Workout Plan:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), Object.entries(workoutPlan).map(([day, exercises]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: day.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: exercise\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, day, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(FullRecommendation, \"BKqWVJ3CRFMA2p4VtvBDL1imsoc=\");\n_c = FullRecommendation;\nexport default FullRecommendation;\nvar _c;\n$RefreshReg$(_c, \"FullRecommendation\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FullRecommendation","_s","splitType","setSplitType","workoutPlan","setWorkoutPlan","fetchWorkoutPlan","alert","response","get","params","split_type","data","workout_plan","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","Object","entries","map","day","exercises","toUpperCase","exercise","index","_c","$RefreshReg$"],"sources":["/home/p/490/app/front/src/components/FullRecommendation.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst FullRecommendation = () => {\n  const [splitType, setSplitType] = useState(\"\");\n  const [workoutPlan, setWorkoutPlan] = useState({});\n\n  const fetchWorkoutPlan = async () => {\n    if (!splitType) {\n      alert(\"Please select a workout split.\");\n      return;\n    }\n\n    try {\n      const response = await axios.get(\"/api/full_recommendation\", {\n        params: { split_type: splitType },\n      });\n      setWorkoutPlan(response.data.workout_plan);\n    } catch (error) {\n      console.error(\"Error fetching workout plan:\", error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Generate Your Full Workout Plan</h2>\n\n      <select value={splitType} onChange={(e) => setSplitType(e.target.value)}>\n        <option value=\"\">Select a Split</option>\n        <option value=\"total_body\">Total Body Split</option>\n        <option value=\"upper_lower\">Upper vs. Lower Split</option>\n        <option value=\"push_pull_legs\">Push vs. Pull vs. Legs Split</option>\n        <option value=\"bro_split\">Bro Split</option>\n      </select>\n\n      <button onClick={fetchWorkoutPlan}>Generate Plan</button>\n\n      <h3>Your Workout Plan:</h3>\n      {Object.entries(workoutPlan).map(([day, exercises]) => (\n        <div key={day}>\n          <h4>{day.toUpperCase()}</h4>\n          <ul>\n            {exercises.map((exercise, index) => (\n              <li key={index}>{exercise}</li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FullRecommendation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
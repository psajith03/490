{"ast":null,"code":"var _jsxFileName = \"/home/p/490/app/front/src/components/OnboardingQuestionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { auth } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OnboardingQuestionnaire = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formData, setFormData] = useState({\n    age: '',\n    gender: '',\n    height: '',\n    weight: '',\n    activityLevel: '',\n    fitnessGoals: [],\n    dietaryRestrictions: [],\n    injuries: '',\n    workoutFrequency: '',\n    preferredWorkoutTime: '',\n    equipmentAccess: [],\n    experienceLevel: '',\n    sleepSchedule: '',\n    stressLevel: '',\n    medicalConditions: ''\n  });\n  const [isComplete, setIsComplete] = useState(false);\n  const questions = [{\n    id: 'basicInfo',\n    title: 'Basic Information',\n    fields: [{\n      name: 'age',\n      label: 'Age',\n      type: 'number',\n      placeholder: 'Enter your age'\n    }, {\n      name: 'gender',\n      label: 'Gender',\n      type: 'select',\n      options: ['Male', 'Female', 'Other', 'Prefer not to say']\n    }, {\n      name: 'height',\n      label: 'Height (inches)',\n      type: 'number',\n      placeholder: 'Enter your height in inches'\n    }, {\n      name: 'weight',\n      label: 'Weight (lbs)',\n      type: 'number',\n      placeholder: 'Enter your weight in lbs'\n    }]\n  }, {\n    id: 'fitnessProfile',\n    title: 'Fitness Profile',\n    fields: [{\n      name: 'activityLevel',\n      label: 'Activity Level',\n      type: 'select',\n      options: ['Sedentary (office job, little exercise)', 'Lightly Active (light exercise 1-3 days/week)', 'Moderately Active (moderate exercise 3-5 days/week)', 'Very Active (hard exercise 6-7 days/week)', 'Extremely Active (very hard exercise, physical job)']\n    }, {\n      name: 'fitnessGoals',\n      label: 'Fitness Goals (select all that apply)',\n      type: 'multiSelect',\n      options: ['Weight Loss', 'Muscle Gain', 'Improve Strength', 'Increase Flexibility', 'Improve Endurance', 'Better Overall Health', 'Sports Performance']\n    }]\n  }, {\n    id: 'healthInfo',\n    title: 'Health Information',\n    fields: [{\n      name: 'dietaryRestrictions',\n      label: 'Dietary Restrictions (select all that apply)',\n      type: 'multiSelect',\n      options: ['None', 'Vegetarian', 'Vegan', 'Gluten-Free', 'Lactose Intolerant', 'Nut Allergy', 'Other']\n    }, {\n      name: 'injuries',\n      label: 'Current or Past Injuries',\n      type: 'textarea',\n      placeholder: 'Please describe any injuries we should know about'\n    }, {\n      name: 'medicalConditions',\n      label: 'Medical Conditions',\n      type: 'textarea',\n      placeholder: 'Please list any relevant medical conditions'\n    }]\n  }, {\n    id: 'preferences',\n    title: 'Workout Preferences',\n    fields: [{\n      name: 'workoutFrequency',\n      label: 'Preferred Workout Frequency',\n      type: 'select',\n      options: ['1-2 times per week', '3-4 times per week', '5-6 times per week', 'Every day']\n    }, {\n      name: 'preferredWorkoutTime',\n      label: 'Preferred Workout Time',\n      type: 'select',\n      options: ['Early Morning', 'Late Morning', 'Afternoon', 'Evening', 'Late Night']\n    }, {\n      name: 'equipmentAccess',\n      label: 'Available Equipment (select all that apply)',\n      type: 'multiSelect',\n      options: ['None (Bodyweight only)', 'Dumbbells', 'Resistance Bands', 'Full Home Gym', 'Gym Membership']\n    }, {\n      name: 'experienceLevel',\n      label: 'Fitness Experience Level',\n      type: 'select',\n      options: ['Beginner', 'Intermediate', 'Advanced']\n    }]\n  }];\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleMultiSelect = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: prev[field].includes(value) ? prev[field].filter(item => item !== value) : [...prev[field], value]\n    }));\n  };\n  const validateForm = () => {\n    const requiredFields = {\n      age: 'Age',\n      gender: 'Gender',\n      height: 'Height',\n      weight: 'Weight',\n      activityLevel: 'Activity Level',\n      fitnessGoals: 'Fitness Goals',\n      workoutFrequency: 'Workout Frequency',\n      experienceLevel: 'Experience Level'\n    };\n    const missingFields = [];\n    Object.entries(requiredFields).forEach(([field, label]) => {\n      if (field === 'fitnessGoals') {\n        if (formData[field].length === 0) {\n          missingFields.push(label);\n        }\n      } else if (!formData[field]) {\n        missingFields.push(label);\n      }\n    });\n    if (missingFields.length > 0) {\n      alert(`Please fill in the following required fields: ${missingFields.join(', ')}`);\n      return false;\n    }\n    if (formData.age < 13 || formData.age > 100) {\n      alert('Please enter a valid age between 13 and 100');\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    // Ensure user is authenticated\n    if (!auth.currentUser) {\n      console.error(\"Authentication error: No current user found.\");\n      alert(\"Session expired. Please log in again.\");\n      navigate('/'); // Redirect to login page\n      return;\n    }\n    try {\n      const idToken = await auth.currentUser.getIdToken(true);\n\n      // Convert height from inches to cm and weight from lbs to kg\n      const convertedData = {\n        ...formData,\n        height: formData.height ? Math.round(formData.height * 2.54) : null,\n        // inches to cm\n        weight: formData.weight ? Math.round(formData.weight * 0.453592) : null // lbs to kg\n      };\n      console.log(\"Submitting profile data:\", convertedData);\n      console.log(\"ID Token:\", idToken);\n      const response = await fetch('http://localhost:5000/api/auth/update-profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${idToken}`\n        },\n        body: JSON.stringify(convertedData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to save profile data');\n      }\n\n      // Fetch updated user data\n      const userResponse = await fetch('http://localhost:5000/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${idToken}`\n        }\n      });\n      const responseText = await userResponse.text(); // Capture raw response for debugging\n\n      if (!userResponse.ok) {\n        console.error(\"Error fetching user data:\", responseText);\n        throw new Error(`Failed to fetch user data. Server Response: ${responseText}`);\n      }\n      const userData = JSON.parse(responseText);\n      if (userData.isOnboardingComplete) {\n        setIsComplete(true);\n        navigate('/home'); // Redirect user after successful onboarding\n      }\n    } catch (error) {\n      console.error('Error saving questionnaire:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  const renderField = field => {\n    switch (field.type) {\n      case 'select':\n        return /*#__PURE__*/_jsxDEV(SelectWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData[field.name],\n            onChange: e => handleInputChange(field.name, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this);\n      case 'multiSelect':\n        return /*#__PURE__*/_jsxDEV(MultiSelectWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: field.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: formData[field.name].includes(option),\n                onChange: () => handleMultiSelect(field.name, option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), option]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this);\n      case 'textarea':\n        return /*#__PURE__*/_jsxDEV(TextAreaWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData[field.name],\n            onChange: e => handleInputChange(field.name, e.target.value),\n            placeholder: field.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(InputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.type,\n            value: formData[field.name],\n            onChange: e => handleInputChange(field.name, e.target.value),\n            placeholder: field.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(QuestionnaireWrapper, {\n    children: isComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for completing the questionnaire!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/home'),\n        children: \"Click to Begin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionnaire-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currentStep].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fields-container\",\n        children: questions[currentStep].fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: renderField(field)\n        }, field.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [currentStep > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentStep(prev => prev - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this), currentStep < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentStep(prev => prev + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-indicator\",\n        children: [\"Step \", currentStep + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_s(OnboardingQuestionnaire, \"ky9e+DCl/ANummxOs8B21oNqq3Y=\", false, function () {\n  return [useNavigate];\n});\n_c = OnboardingQuestionnaire;\nconst QuestionnaireWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #f5f5f5;\n\n  .questionnaire-container, .completion-container {\n    background: white;\n    padding: 30px;\n    border-radius: 10px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    max-width: 600px;\n    text-align: center;\n\n    h2 {\n      margin-bottom: 30px;\n      color: #323232;\n    }\n\n    .fields-container {\n      display: flex;\n      flex-direction: column;\n      gap: 20px;\n      margin-bottom: 30px;\n    }\n\n    .navigation-buttons {\n      display: flex;\n      justify-content: space-between;\n      gap: 20px;\n      margin-bottom: 20px;\n\n      button {\n        padding: 10px 20px;\n        border: 2px solid #323232;\n        border-radius: 5px;\n        background-color: white;\n        cursor: pointer;\n        font-weight: 600;\n        box-shadow: 4px 4px #323232;\n        transition: all 0.2s ease;\n\n        &:hover {\n          transform: translate(2px, 2px);\n          box-shadow: 2px 2px #323232;\n        }\n      }\n    }\n\n    .progress-indicator {\n      color: #666;\n    }\n  }\n`;\n_c2 = QuestionnaireWrapper;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  label {\n    font-weight: 600;\n    color: #323232;\n  }\n\n  input {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    box-shadow: 4px 4px #323232;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n_c3 = InputWrapper;\nconst SelectWrapper = styled(InputWrapper)`\n  select {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    background-color: white;\n    box-shadow: 4px 4px #323232;\n    cursor: pointer;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n_c4 = SelectWrapper;\nconst MultiSelectWrapper = styled(InputWrapper)`\n  .options {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .checkbox-label {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n\n    input[type=\"checkbox\"] {\n      width: 20px;\n      height: 20px;\n      cursor: pointer;\n    }\n  }\n`;\n_c5 = MultiSelectWrapper;\nconst TextAreaWrapper = styled(InputWrapper)`\n  textarea {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    min-height: 100px;\n    resize: vertical;\n    box-shadow: 4px 4px #323232;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n_c6 = TextAreaWrapper;\nexport default OnboardingQuestionnaire;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"OnboardingQuestionnaire\");\n$RefreshReg$(_c2, \"QuestionnaireWrapper\");\n$RefreshReg$(_c3, \"InputWrapper\");\n$RefreshReg$(_c4, \"SelectWrapper\");\n$RefreshReg$(_c5, \"MultiSelectWrapper\");\n$RefreshReg$(_c6, \"TextAreaWrapper\");","map":{"version":3,"names":["React","useState","useNavigate","styled","auth","jsxDEV","_jsxDEV","OnboardingQuestionnaire","_s","navigate","currentStep","setCurrentStep","formData","setFormData","age","gender","height","weight","activityLevel","fitnessGoals","dietaryRestrictions","injuries","workoutFrequency","preferredWorkoutTime","equipmentAccess","experienceLevel","sleepSchedule","stressLevel","medicalConditions","isComplete","setIsComplete","questions","id","title","fields","name","label","type","placeholder","options","handleInputChange","field","value","prev","handleMultiSelect","includes","filter","item","validateForm","requiredFields","missingFields","Object","entries","forEach","length","push","alert","join","handleSubmit","currentUser","console","error","idToken","getIdToken","convertedData","Math","round","log","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","userResponse","responseText","text","userData","parse","isOnboardingComplete","message","renderField","SelectWrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","map","option","MultiSelectWrapper","className","checked","TextAreaWrapper","InputWrapper","QuestionnaireWrapper","onClick","_c","div","_c2","_c3","_c4","_c5","_c6","$RefreshReg$"],"sources":["/home/p/490/app/front/src/components/OnboardingQuestionnaire.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { auth } from '../firebase';\n\nconst OnboardingQuestionnaire = () => {\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formData, setFormData] = useState({\n    age: '',\n    gender: '',\n    height: '',\n    weight: '',\n    activityLevel: '',\n    fitnessGoals: [],\n    dietaryRestrictions: [],\n    injuries: '',\n    workoutFrequency: '',\n    preferredWorkoutTime: '',\n    equipmentAccess: [],\n    experienceLevel: '',\n    sleepSchedule: '',\n    stressLevel: '',\n    medicalConditions: ''\n  });\n  const [isComplete, setIsComplete] = useState(false);\n\n  const questions = [\n    {\n      id: 'basicInfo',\n      title: 'Basic Information',\n      fields: [\n        {\n          name: 'age',\n          label: 'Age',\n          type: 'number',\n          placeholder: 'Enter your age'\n        },\n        {\n          name: 'gender',\n          label: 'Gender',\n          type: 'select',\n          options: ['Male', 'Female', 'Other', 'Prefer not to say']\n        },\n        {\n          name: 'height',\n          label: 'Height (inches)',\n          type: 'number',\n          placeholder: 'Enter your height in inches'\n        },\n        {\n          name: 'weight',\n          label: 'Weight (lbs)',\n          type: 'number',\n          placeholder: 'Enter your weight in lbs'\n        }\n      ]\n    },\n    {\n      id: 'fitnessProfile',\n      title: 'Fitness Profile',\n      fields: [\n        {\n          name: 'activityLevel',\n          label: 'Activity Level',\n          type: 'select',\n          options: [\n            'Sedentary (office job, little exercise)',\n            'Lightly Active (light exercise 1-3 days/week)',\n            'Moderately Active (moderate exercise 3-5 days/week)',\n            'Very Active (hard exercise 6-7 days/week)',\n            'Extremely Active (very hard exercise, physical job)'\n          ]\n        },\n        {\n          name: 'fitnessGoals',\n          label: 'Fitness Goals (select all that apply)',\n          type: 'multiSelect',\n          options: [\n            'Weight Loss',\n            'Muscle Gain',\n            'Improve Strength',\n            'Increase Flexibility',\n            'Improve Endurance',\n            'Better Overall Health',\n            'Sports Performance'\n          ]\n        }\n      ]\n    },\n    {\n      id: 'healthInfo',\n      title: 'Health Information',\n      fields: [\n        {\n          name: 'dietaryRestrictions',\n          label: 'Dietary Restrictions (select all that apply)',\n          type: 'multiSelect',\n          options: [\n            'None',\n            'Vegetarian',\n            'Vegan',\n            'Gluten-Free',\n            'Lactose Intolerant',\n            'Nut Allergy',\n            'Other'\n          ]\n        },\n        {\n          name: 'injuries',\n          label: 'Current or Past Injuries',\n          type: 'textarea',\n          placeholder: 'Please describe any injuries we should know about'\n        },\n        {\n          name: 'medicalConditions',\n          label: 'Medical Conditions',\n          type: 'textarea',\n          placeholder: 'Please list any relevant medical conditions'\n        }\n      ]\n    },\n    {\n      id: 'preferences',\n      title: 'Workout Preferences',\n      fields: [\n        {\n          name: 'workoutFrequency',\n          label: 'Preferred Workout Frequency',\n          type: 'select',\n          options: [\n            '1-2 times per week',\n            '3-4 times per week',\n            '5-6 times per week',\n            'Every day'\n          ]\n        },\n        {\n          name: 'preferredWorkoutTime',\n          label: 'Preferred Workout Time',\n          type: 'select',\n          options: [\n            'Early Morning',\n            'Late Morning',\n            'Afternoon',\n            'Evening',\n            'Late Night'\n          ]\n        },\n        {\n          name: 'equipmentAccess',\n          label: 'Available Equipment (select all that apply)',\n          type: 'multiSelect',\n          options: [\n            'None (Bodyweight only)',\n            'Dumbbells',\n            'Resistance Bands',\n            'Full Home Gym',\n            'Gym Membership'\n          ]\n        },\n        {\n          name: 'experienceLevel',\n          label: 'Fitness Experience Level',\n          type: 'select',\n          options: [\n            'Beginner',\n            'Intermediate',\n            'Advanced'\n          ]\n        }\n      ]\n    }\n  ];\n\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleMultiSelect = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: prev[field].includes(value)\n        ? prev[field].filter(item => item !== value)\n        : [...prev[field], value]\n    }));\n  };\n\n  const validateForm = () => {\n    const requiredFields = {\n      age: 'Age',\n      gender: 'Gender',\n      height: 'Height',\n      weight: 'Weight',\n      activityLevel: 'Activity Level',\n      fitnessGoals: 'Fitness Goals',\n      workoutFrequency: 'Workout Frequency',\n      experienceLevel: 'Experience Level'\n    };\n\n    const missingFields = [];\n    \n    Object.entries(requiredFields).forEach(([field, label]) => {\n      if (field === 'fitnessGoals') {\n        if (formData[field].length === 0) {\n          missingFields.push(label);\n        }\n      } else if (!formData[field]) {\n        missingFields.push(label);\n      }\n    });\n\n    if (missingFields.length > 0) {\n      alert(`Please fill in the following required fields: ${missingFields.join(', ')}`);\n      return false;\n    }\n\n    if (formData.age < 13 || formData.age > 100) {\n      alert('Please enter a valid age between 13 and 100');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n  \n    // Ensure user is authenticated\n    if (!auth.currentUser) {\n      console.error(\"Authentication error: No current user found.\");\n      alert(\"Session expired. Please log in again.\");\n      navigate('/'); // Redirect to login page\n      return;\n    }\n  \n    try {\n      const idToken = await auth.currentUser.getIdToken(true);\n  \n      // Convert height from inches to cm and weight from lbs to kg\n      const convertedData = {\n        ...formData,\n        height: formData.height ? Math.round(formData.height * 2.54) : null, // inches to cm\n        weight: formData.weight ? Math.round(formData.weight * 0.453592) : null // lbs to kg\n      };\n  \n      console.log(\"Submitting profile data:\", convertedData);\n      console.log(\"ID Token:\", idToken);\n  \n      const response = await fetch('http://localhost:5000/api/auth/update-profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${idToken}`\n        },\n        body: JSON.stringify(convertedData)\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to save profile data');\n      }\n  \n      // Fetch updated user data\n      const userResponse = await fetch('http://localhost:5000/api/auth/me', {\n        headers: { 'Authorization': `Bearer ${idToken}` }\n      });\n      \n      const responseText = await userResponse.text(); // Capture raw response for debugging\n      \n      if (!userResponse.ok) {\n        console.error(\"Error fetching user data:\", responseText);\n        throw new Error(`Failed to fetch user data. Server Response: ${responseText}`);\n      }\n      \n      const userData = JSON.parse(responseText);\n      \n      if (userData.isOnboardingComplete) {\n        setIsComplete(true);\n        navigate('/home'); // Redirect user after successful onboarding\n      }\n    } catch (error) {\n      console.error('Error saving questionnaire:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  \n  \n\n  const renderField = (field) => {\n    switch (field.type) {\n      case 'select':\n        return (\n          <SelectWrapper>\n            <label>{field.label}</label>\n            <select\n              value={formData[field.name]}\n              onChange={(e) => handleInputChange(field.name, e.target.value)}\n            >\n              <option value=\"\">Select an option</option>\n              {field.options.map(option => (\n                <option key={option} value={option}>{option}</option>\n              ))}\n            </select>\n          </SelectWrapper>\n        );\n\n      case 'multiSelect':\n        return (\n          <MultiSelectWrapper>\n            <label>{field.label}</label>\n            <div className=\"options\">\n              {field.options.map(option => (\n                <label key={option} className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData[field.name].includes(option)}\n                    onChange={() => handleMultiSelect(field.name, option)}\n                  />\n                  {option}\n                </label>\n              ))}\n            </div>\n          </MultiSelectWrapper>\n        );\n\n      case 'textarea':\n        return (\n          <TextAreaWrapper>\n            <label>{field.label}</label>\n            <textarea\n              value={formData[field.name]}\n              onChange={(e) => handleInputChange(field.name, e.target.value)}\n              placeholder={field.placeholder}\n            />\n          </TextAreaWrapper>\n        );\n\n      default:\n        return (\n          <InputWrapper>\n            <label>{field.label}</label>\n            <input\n              type={field.type}\n              value={formData[field.name]}\n              onChange={(e) => handleInputChange(field.name, e.target.value)}\n              placeholder={field.placeholder}\n            />\n          </InputWrapper>\n        );\n    }\n  };\n\n  return (\n    <QuestionnaireWrapper>\n      {isComplete ? (\n        <div className=\"completion-container\">\n          <h2>Thank you for completing the questionnaire!</h2>\n          <button onClick={() => navigate('/home')}>Click to Begin</button>\n        </div>\n      ) : (\n        <div className=\"questionnaire-container\">\n          <h2>{questions[currentStep].title}</h2>\n          <div className=\"fields-container\">\n            {questions[currentStep].fields.map(field => (\n              <div key={field.name} className=\"field\">\n                {renderField(field)}\n              </div>\n            ))}\n          </div>\n          <div className=\"navigation-buttons\">\n            {currentStep > 0 && (\n              <button onClick={() => setCurrentStep(prev => prev - 1)}>\n                Previous\n              </button>\n            )}\n            {currentStep < questions.length - 1 ? (\n              <button onClick={() => setCurrentStep(prev => prev + 1)}>\n                Next\n              </button>\n            ) : (\n              <button onClick={handleSubmit}>\n                Complete\n              </button>\n            )}\n          </div>\n          <div className=\"progress-indicator\">\n            Step {currentStep + 1} of {questions.length}\n          </div>\n        </div>\n      )}\n    </QuestionnaireWrapper>\n  );\n};\n\nconst QuestionnaireWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #f5f5f5;\n\n  .questionnaire-container, .completion-container {\n    background: white;\n    padding: 30px;\n    border-radius: 10px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    max-width: 600px;\n    text-align: center;\n\n    h2 {\n      margin-bottom: 30px;\n      color: #323232;\n    }\n\n    .fields-container {\n      display: flex;\n      flex-direction: column;\n      gap: 20px;\n      margin-bottom: 30px;\n    }\n\n    .navigation-buttons {\n      display: flex;\n      justify-content: space-between;\n      gap: 20px;\n      margin-bottom: 20px;\n\n      button {\n        padding: 10px 20px;\n        border: 2px solid #323232;\n        border-radius: 5px;\n        background-color: white;\n        cursor: pointer;\n        font-weight: 600;\n        box-shadow: 4px 4px #323232;\n        transition: all 0.2s ease;\n\n        &:hover {\n          transform: translate(2px, 2px);\n          box-shadow: 2px 2px #323232;\n        }\n      }\n    }\n\n    .progress-indicator {\n      color: #666;\n    }\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  label {\n    font-weight: 600;\n    color: #323232;\n  }\n\n  input {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    box-shadow: 4px 4px #323232;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n\nconst SelectWrapper = styled(InputWrapper)`\n  select {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    background-color: white;\n    box-shadow: 4px 4px #323232;\n    cursor: pointer;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n\nconst MultiSelectWrapper = styled(InputWrapper)`\n  .options {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .checkbox-label {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n\n    input[type=\"checkbox\"] {\n      width: 20px;\n      height: 20px;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst TextAreaWrapper = styled(InputWrapper)`\n  textarea {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    min-height: 100px;\n    resize: vertical;\n    box-shadow: 4px 4px #323232;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n\nexport default OnboardingQuestionnaire;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
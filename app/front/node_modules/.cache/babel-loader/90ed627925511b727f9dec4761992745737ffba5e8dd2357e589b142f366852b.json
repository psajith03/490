{"ast":null,"code":"var _jsxFileName = \"/home/p/490/app/front/src/components/OnboardingQuestionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { auth } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OnboardingQuestionnaire = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formData, setFormData] = useState({\n    age: '',\n    gender: '',\n    height: '',\n    weight: '',\n    activityLevel: '',\n    fitnessGoals: [],\n    dietaryRestrictions: [],\n    injuries: '',\n    workoutFrequency: '',\n    preferredWorkoutTime: '',\n    equipmentAccess: [],\n    experienceLevel: '',\n    sleepSchedule: '',\n    stressLevel: '',\n    medicalConditions: ''\n  });\n  const questions = [{\n    id: 'basicInfo',\n    title: 'Basic Information',\n    fields: [{\n      name: 'age',\n      label: 'Age',\n      type: 'number',\n      placeholder: 'Enter your age'\n    }, {\n      name: 'gender',\n      label: 'Gender',\n      type: 'select',\n      options: ['Male', 'Female', 'Other', 'Prefer not to say']\n    }, {\n      name: 'height',\n      label: 'Height (inches)',\n      type: 'number',\n      placeholder: 'Enter your height in inches'\n    }, {\n      name: 'weight',\n      label: 'Weight (lbs)',\n      type: 'number',\n      placeholder: 'Enter your weight in lbs'\n    }]\n  }, {\n    id: 'fitnessProfile',\n    title: 'Fitness Profile',\n    fields: [{\n      name: 'activityLevel',\n      label: 'Activity Level',\n      type: 'select',\n      options: ['Sedentary (office job, little exercise)', 'Lightly Active (light exercise 1-3 days/week)', 'Moderately Active (moderate exercise 3-5 days/week)', 'Very Active (hard exercise 6-7 days/week)', 'Extremely Active (very hard exercise, physical job)']\n    }, {\n      name: 'fitnessGoals',\n      label: 'Fitness Goals (select all that apply)',\n      type: 'multiSelect',\n      options: ['Weight Loss', 'Muscle Gain', 'Improve Strength', 'Increase Flexibility', 'Improve Endurance', 'Better Overall Health', 'Sports Performance']\n    }]\n  }, {\n    id: 'healthInfo',\n    title: 'Health Information',\n    fields: [{\n      name: 'dietaryRestrictions',\n      label: 'Dietary Restrictions (select all that apply)',\n      type: 'multiSelect',\n      options: ['None', 'Vegetarian', 'Vegan', 'Gluten-Free', 'Lactose Intolerant', 'Nut Allergy', 'Other']\n    }, {\n      name: 'injuries',\n      label: 'Current or Past Injuries',\n      type: 'textarea',\n      placeholder: 'Please describe any injuries we should know about'\n    }, {\n      name: 'medicalConditions',\n      label: 'Medical Conditions',\n      type: 'textarea',\n      placeholder: 'Please list any relevant medical conditions'\n    }]\n  }, {\n    id: 'preferences',\n    title: 'Workout Preferences',\n    fields: [{\n      name: 'workoutFrequency',\n      label: 'Preferred Workout Frequency',\n      type: 'select',\n      options: ['1-2 times per week', '3-4 times per week', '5-6 times per week', 'Every day']\n    }, {\n      name: 'preferredWorkoutTime',\n      label: 'Preferred Workout Time',\n      type: 'select',\n      options: ['Early Morning', 'Late Morning', 'Afternoon', 'Evening', 'Late Night']\n    }, {\n      name: 'equipmentAccess',\n      label: 'Available Equipment (select all that apply)',\n      type: 'multiSelect',\n      options: ['None (Bodyweight only)', 'Dumbbells', 'Resistance Bands', 'Full Home Gym', 'Gym Membership']\n    }, {\n      name: 'experienceLevel',\n      label: 'Fitness Experience Level',\n      type: 'select',\n      options: ['Beginner', 'Intermediate', 'Advanced']\n    }]\n  }];\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleMultiSelect = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: prev[field].includes(value) ? prev[field].filter(item => item !== value) : [...prev[field], value]\n    }));\n  };\n  const handleSubmit = async () => {\n    try {\n      // Convert height from inches to cm and weight from lbs to kg\n      const convertedData = {\n        ...formData,\n        height: formData.height ? Math.round(formData.height * 2.54) : null,\n        // inches to cm\n        weight: formData.weight ? Math.round(formData.weight * 0.453592) : null // lbs to kg\n      };\n      const idToken = await auth.currentUser.getIdToken();\n      const response = await fetch('http://localhost:5000/api/auth/update-profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${idToken}`\n        },\n        body: JSON.stringify(convertedData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save profile data');\n      }\n\n      // Fetch updated user data to ensure onboarding status is updated\n      const refreshResponse = await fetch('http://localhost:5000/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${idToken}`\n        }\n      });\n      if (refreshResponse.ok) {\n        const userData = await refreshResponse.json();\n        console.log('Updated user data:', userData); // Log updated user data\n        if (userData.isOnboardingComplete) {\n          navigate('/home');\n        }\n      }\n    } catch (error) {\n      console.error('Error saving questionnaire:', error);\n      alert('Failed to save your profile. Please try again.');\n    }\n  };\n  const renderField = field => {\n    switch (field.type) {\n      case 'select':\n        return /*#__PURE__*/_jsxDEV(SelectWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData[field.name],\n            onChange: e => handleInputChange(field.name, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this);\n      case 'multiSelect':\n        return /*#__PURE__*/_jsxDEV(MultiSelectWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: field.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: formData[field.name].includes(option),\n                onChange: () => handleMultiSelect(field.name, option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), option]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this);\n      case 'textarea':\n        return /*#__PURE__*/_jsxDEV(TextAreaWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData[field.name],\n            onChange: e => handleInputChange(field.name, e.target.value),\n            placeholder: field.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(InputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.type,\n            value: formData[field.name],\n            onChange: e => handleInputChange(field.name, e.target.value),\n            placeholder: field.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(QuestionnaireWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionnaire-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currentStep].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fields-container\",\n        children: questions[currentStep].fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: renderField(field)\n        }, field.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [currentStep > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentStep(prev => prev - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), currentStep < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentStep(prev => prev + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-indicator\",\n        children: [\"Step \", currentStep + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(OnboardingQuestionnaire, \"d6++BOFz6dKyei9LRqGd0HA+2Ko=\", false, function () {\n  return [useNavigate];\n});\n_c = OnboardingQuestionnaire;\nconst QuestionnaireWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #f5f5f5;\n\n  .questionnaire-container {\n    background: white;\n    padding: 30px;\n    border-radius: 10px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    max-width: 600px;\n\n    h2 {\n      text-align: center;\n      margin-bottom: 30px;\n      color: #323232;\n    }\n\n    .fields-container {\n      display: flex;\n      flex-direction: column;\n      gap: 20px;\n      margin-bottom: 30px;\n    }\n\n    .navigation-buttons {\n      display: flex;\n      justify-content: space-between;\n      gap: 20px;\n      margin-bottom: 20px;\n\n      button {\n        padding: 10px 20px;\n        border: 2px solid #323232;\n        border-radius: 5px;\n        background-color: white;\n        cursor: pointer;\n        font-weight: 600;\n        box-shadow: 4px 4px #323232;\n        transition: all 0.2s ease;\n\n        &:hover {\n          transform: translate(2px, 2px);\n          box-shadow: 2px 2px #323232;\n        }\n      }\n    }\n\n    .progress-indicator {\n      text-align: center;\n      color: #666;\n    }\n  }\n`;\n_c2 = QuestionnaireWrapper;\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  label {\n    font-weight: 600;\n    color: #323232;\n  }\n\n  input {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    box-shadow: 4px 4px #323232;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n_c3 = InputWrapper;\nconst SelectWrapper = styled(InputWrapper)`\n  select {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    background-color: white;\n    box-shadow: 4px 4px #323232;\n    cursor: pointer;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n_c4 = SelectWrapper;\nconst MultiSelectWrapper = styled(InputWrapper)`\n  .options {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .checkbox-label {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n\n    input[type=\"checkbox\"] {\n      width: 20px;\n      height: 20px;\n      cursor: pointer;\n    }\n  }\n`;\n_c5 = MultiSelectWrapper;\nconst TextAreaWrapper = styled(InputWrapper)`\n  textarea {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    min-height: 100px;\n    resize: vertical;\n    box-shadow: 4px 4px #323232;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n_c6 = TextAreaWrapper;\nexport default OnboardingQuestionnaire;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"OnboardingQuestionnaire\");\n$RefreshReg$(_c2, \"QuestionnaireWrapper\");\n$RefreshReg$(_c3, \"InputWrapper\");\n$RefreshReg$(_c4, \"SelectWrapper\");\n$RefreshReg$(_c5, \"MultiSelectWrapper\");\n$RefreshReg$(_c6, \"TextAreaWrapper\");","map":{"version":3,"names":["React","useState","useNavigate","styled","auth","jsxDEV","_jsxDEV","OnboardingQuestionnaire","_s","navigate","currentStep","setCurrentStep","formData","setFormData","age","gender","height","weight","activityLevel","fitnessGoals","dietaryRestrictions","injuries","workoutFrequency","preferredWorkoutTime","equipmentAccess","experienceLevel","sleepSchedule","stressLevel","medicalConditions","questions","id","title","fields","name","label","type","placeholder","options","handleInputChange","field","value","prev","handleMultiSelect","includes","filter","item","handleSubmit","convertedData","Math","round","idToken","currentUser","getIdToken","response","fetch","method","headers","body","JSON","stringify","ok","Error","refreshResponse","userData","json","console","log","isOnboardingComplete","error","alert","renderField","SelectWrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","map","option","MultiSelectWrapper","className","checked","TextAreaWrapper","InputWrapper","QuestionnaireWrapper","onClick","length","_c","div","_c2","_c3","_c4","_c5","_c6","$RefreshReg$"],"sources":["/home/p/490/app/front/src/components/OnboardingQuestionnaire.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { auth } from '../firebase';\n\nconst OnboardingQuestionnaire = () => {\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formData, setFormData] = useState({\n    age: '',\n    gender: '',\n    height: '',\n    weight: '',\n    activityLevel: '',\n    fitnessGoals: [],\n    dietaryRestrictions: [],\n    injuries: '',\n    workoutFrequency: '',\n    preferredWorkoutTime: '',\n    equipmentAccess: [],\n    experienceLevel: '',\n    sleepSchedule: '',\n    stressLevel: '',\n    medicalConditions: ''\n  });\n\n  const questions = [\n    {\n      id: 'basicInfo',\n      title: 'Basic Information',\n      fields: [\n        {\n          name: 'age',\n          label: 'Age',\n          type: 'number',\n          placeholder: 'Enter your age'\n        },\n        {\n          name: 'gender',\n          label: 'Gender',\n          type: 'select',\n          options: ['Male', 'Female', 'Other', 'Prefer not to say']\n        },\n        {\n          name: 'height',\n          label: 'Height (inches)',\n          type: 'number',\n          placeholder: 'Enter your height in inches'\n        },\n        {\n          name: 'weight',\n          label: 'Weight (lbs)',\n          type: 'number',\n          placeholder: 'Enter your weight in lbs'\n        }\n      ]\n    },\n    {\n      id: 'fitnessProfile',\n      title: 'Fitness Profile',\n      fields: [\n        {\n          name: 'activityLevel',\n          label: 'Activity Level',\n          type: 'select',\n          options: [\n            'Sedentary (office job, little exercise)',\n            'Lightly Active (light exercise 1-3 days/week)',\n            'Moderately Active (moderate exercise 3-5 days/week)',\n            'Very Active (hard exercise 6-7 days/week)',\n            'Extremely Active (very hard exercise, physical job)'\n          ]\n        },\n        {\n          name: 'fitnessGoals',\n          label: 'Fitness Goals (select all that apply)',\n          type: 'multiSelect',\n          options: [\n            'Weight Loss',\n            'Muscle Gain',\n            'Improve Strength',\n            'Increase Flexibility',\n            'Improve Endurance',\n            'Better Overall Health',\n            'Sports Performance'\n          ]\n        }\n      ]\n    },\n    {\n      id: 'healthInfo',\n      title: 'Health Information',\n      fields: [\n        {\n          name: 'dietaryRestrictions',\n          label: 'Dietary Restrictions (select all that apply)',\n          type: 'multiSelect',\n          options: [\n            'None',\n            'Vegetarian',\n            'Vegan',\n            'Gluten-Free',\n            'Lactose Intolerant',\n            'Nut Allergy',\n            'Other'\n          ]\n        },\n        {\n          name: 'injuries',\n          label: 'Current or Past Injuries',\n          type: 'textarea',\n          placeholder: 'Please describe any injuries we should know about'\n        },\n        {\n          name: 'medicalConditions',\n          label: 'Medical Conditions',\n          type: 'textarea',\n          placeholder: 'Please list any relevant medical conditions'\n        }\n      ]\n    },\n    {\n      id: 'preferences',\n      title: 'Workout Preferences',\n      fields: [\n        {\n          name: 'workoutFrequency',\n          label: 'Preferred Workout Frequency',\n          type: 'select',\n          options: [\n            '1-2 times per week',\n            '3-4 times per week',\n            '5-6 times per week',\n            'Every day'\n          ]\n        },\n        {\n          name: 'preferredWorkoutTime',\n          label: 'Preferred Workout Time',\n          type: 'select',\n          options: [\n            'Early Morning',\n            'Late Morning',\n            'Afternoon',\n            'Evening',\n            'Late Night'\n          ]\n        },\n        {\n          name: 'equipmentAccess',\n          label: 'Available Equipment (select all that apply)',\n          type: 'multiSelect',\n          options: [\n            'None (Bodyweight only)',\n            'Dumbbells',\n            'Resistance Bands',\n            'Full Home Gym',\n            'Gym Membership'\n          ]\n        },\n        {\n          name: 'experienceLevel',\n          label: 'Fitness Experience Level',\n          type: 'select',\n          options: [\n            'Beginner',\n            'Intermediate',\n            'Advanced'\n          ]\n        }\n      ]\n    }\n  ];\n\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleMultiSelect = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: prev[field].includes(value)\n        ? prev[field].filter(item => item !== value)\n        : [...prev[field], value]\n    }));\n  };\n\n  const handleSubmit = async () => {\n    try {\n      // Convert height from inches to cm and weight from lbs to kg\n      const convertedData = {\n        ...formData,\n        height: formData.height ? Math.round(formData.height * 2.54) : null, // inches to cm\n        weight: formData.weight ? Math.round(formData.weight * 0.453592) : null // lbs to kg\n      };\n\n      const idToken = await auth.currentUser.getIdToken();\n      const response = await fetch('http://localhost:5000/api/auth/update-profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${idToken}`\n        },\n        body: JSON.stringify(convertedData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save profile data');\n      }\n\n      // Fetch updated user data to ensure onboarding status is updated\n      const refreshResponse = await fetch('http://localhost:5000/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${idToken}`\n        }\n      });\n\n      if (refreshResponse.ok) {\n        const userData = await refreshResponse.json();\n        console.log('Updated user data:', userData); // Log updated user data\n        if (userData.isOnboardingComplete) {\n          navigate('/home');\n        }\n      }\n    } catch (error) {\n      console.error('Error saving questionnaire:', error);\n      alert('Failed to save your profile. Please try again.');\n    }\n  };\n\n  const renderField = (field) => {\n    switch (field.type) {\n      case 'select':\n        return (\n          <SelectWrapper>\n            <label>{field.label}</label>\n            <select\n              value={formData[field.name]}\n              onChange={(e) => handleInputChange(field.name, e.target.value)}\n            >\n              <option value=\"\">Select an option</option>\n              {field.options.map(option => (\n                <option key={option} value={option}>{option}</option>\n              ))}\n            </select>\n          </SelectWrapper>\n        );\n\n      case 'multiSelect':\n        return (\n          <MultiSelectWrapper>\n            <label>{field.label}</label>\n            <div className=\"options\">\n              {field.options.map(option => (\n                <label key={option} className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData[field.name].includes(option)}\n                    onChange={() => handleMultiSelect(field.name, option)}\n                  />\n                  {option}\n                </label>\n              ))}\n            </div>\n          </MultiSelectWrapper>\n        );\n\n      case 'textarea':\n        return (\n          <TextAreaWrapper>\n            <label>{field.label}</label>\n            <textarea\n              value={formData[field.name]}\n              onChange={(e) => handleInputChange(field.name, e.target.value)}\n              placeholder={field.placeholder}\n            />\n          </TextAreaWrapper>\n        );\n\n      default:\n        return (\n          <InputWrapper>\n            <label>{field.label}</label>\n            <input\n              type={field.type}\n              value={formData[field.name]}\n              onChange={(e) => handleInputChange(field.name, e.target.value)}\n              placeholder={field.placeholder}\n            />\n          </InputWrapper>\n        );\n    }\n  };\n\n  return (\n    <QuestionnaireWrapper>\n      <div className=\"questionnaire-container\">\n        <h2>{questions[currentStep].title}</h2>\n        <div className=\"fields-container\">\n          {questions[currentStep].fields.map(field => (\n            <div key={field.name} className=\"field\">\n              {renderField(field)}\n            </div>\n          ))}\n        </div>\n        <div className=\"navigation-buttons\">\n          {currentStep > 0 && (\n            <button onClick={() => setCurrentStep(prev => prev - 1)}>\n              Previous\n            </button>\n          )}\n          {currentStep < questions.length - 1 ? (\n            <button onClick={() => setCurrentStep(prev => prev + 1)}>\n              Next\n            </button>\n          ) : (\n            <button onClick={handleSubmit}>\n              Complete\n            </button>\n          )}\n        </div>\n        <div className=\"progress-indicator\">\n          Step {currentStep + 1} of {questions.length}\n        </div>\n      </div>\n    </QuestionnaireWrapper>\n  );\n};\n\nconst QuestionnaireWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #f5f5f5;\n\n  .questionnaire-container {\n    background: white;\n    padding: 30px;\n    border-radius: 10px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    max-width: 600px;\n\n    h2 {\n      text-align: center;\n      margin-bottom: 30px;\n      color: #323232;\n    }\n\n    .fields-container {\n      display: flex;\n      flex-direction: column;\n      gap: 20px;\n      margin-bottom: 30px;\n    }\n\n    .navigation-buttons {\n      display: flex;\n      justify-content: space-between;\n      gap: 20px;\n      margin-bottom: 20px;\n\n      button {\n        padding: 10px 20px;\n        border: 2px solid #323232;\n        border-radius: 5px;\n        background-color: white;\n        cursor: pointer;\n        font-weight: 600;\n        box-shadow: 4px 4px #323232;\n        transition: all 0.2s ease;\n\n        &:hover {\n          transform: translate(2px, 2px);\n          box-shadow: 2px 2px #323232;\n        }\n      }\n    }\n\n    .progress-indicator {\n      text-align: center;\n      color: #666;\n    }\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  label {\n    font-weight: 600;\n    color: #323232;\n  }\n\n  input {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    box-shadow: 4px 4px #323232;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n\nconst SelectWrapper = styled(InputWrapper)`\n  select {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    background-color: white;\n    box-shadow: 4px 4px #323232;\n    cursor: pointer;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n\nconst MultiSelectWrapper = styled(InputWrapper)`\n  .options {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .checkbox-label {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n\n    input[type=\"checkbox\"] {\n      width: 20px;\n      height: 20px;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst TextAreaWrapper = styled(InputWrapper)`\n  textarea {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n    min-height: 100px;\n    resize: vertical;\n    box-shadow: 4px 4px #323232;\n\n    &:focus {\n      outline: none;\n      border-color: #2d8cf0;\n    }\n  }\n`;\n\nexport default OnboardingQuestionnaire; "],"mappings":"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AAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE3B,CAAC;AAACpE,EAAA,CArUID,uBAAuB;EAAA,QACVL,WAAW;AAAA;AAAAwF,EAAA,GADxBnF,uBAAuB;AAuU7B,MAAMgF,oBAAoB,GAAGpF,MAAM,CAACwF,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAzDIL,oBAAoB;AA2D1B,MAAMD,YAAY,GAAGnF,MAAM,CAACwF,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GAtBIP,YAAY;AAwBlB,MAAMf,aAAa,GAAGpE,MAAM,CAACmF,YAAY,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GAfIvB,aAAa;AAiBnB,MAAMW,kBAAkB,GAAG/E,MAAM,CAACmF,YAAY,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GAnBIb,kBAAkB;AAqBxB,MAAMG,eAAe,GAAGlF,MAAM,CAACmF,YAAY,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAfIX,eAAe;AAiBrB,eAAe9E,uBAAuB;AAAC,IAAAmF,EAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
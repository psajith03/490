{"ast":null,"code":"var _jsxFileName = \"/home/p/490/app/front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport GlowingButton from './components/GlowingButton'; // Import the GlowingButton component\nimport TerminalLoader from './components/TerminalLoader'; // Import the TerminalLoader component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to control whether TerminalLoader is visible\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Handle button click event\n  const handleClick = () => {\n    setIsLoading(true); // Show the TerminalLoader when button is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(GlowingButton, {\n        text: \"Coming Soon\",\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(TerminalLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GlowingButton","TerminalLoader","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","handleClick","className","children","text","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/p/490/app/front/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport GlowingButton from './components/GlowingButton'; // Import the GlowingButton component\nimport TerminalLoader from './components/TerminalLoader'; // Import the TerminalLoader component\n\nfunction App() {\n  // State to control whether TerminalLoader is visible\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Handle button click event\n  const handleClick = () => {\n    setIsLoading(true); // Show the TerminalLoader when button is clicked\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <GlowingButton text=\"Coming Soon\" onClick={handleClick} />\n      </header>\n      \n      {/* Overlay the TerminalLoader over the button when isLoading is true */}\n      {isLoading && (\n        <div className=\"overlay\">\n          <TerminalLoader />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,4BAA4B,CAAC,CAAC;AACxD,OAAOC,cAAc,MAAM,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBP,OAAA;MAAQM,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BP,OAAA,CAACH,aAAa;QAACW,IAAI,EAAC,aAAa;QAACC,OAAO,EAAEJ;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EAGRV,SAAS,iBACRH,OAAA;MAAKM,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBP,OAAA,CAACF,cAAc;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACX,EAAA,CAvBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
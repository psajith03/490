{"ast":null,"code":"var _jsxFileName = \"/home/p/490/app/front/src/components/Diet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SPOONACULAR_API_KEY = 'YOUR_SPOONACULAR_API_KEY';\nconst Diet = () => {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  const [input, setInput] = useState('');\n  const [nutritionData, setNutritionData] = useState(null);\n  const [missingNutrients, setMissingNutrients] = useState([]);\n  const [recipeSuggestions, setRecipeSuggestions] = useState([]);\n\n  // Add ingredient\n  const addIngredient = () => {\n    if (input.trim() !== '') {\n      setIngredients([...ingredients, input.trim()]);\n      setInput('');\n    }\n  };\n\n  // Fetch nutritional data and recipes from Spoonacular\n  const fetchNutritionAndRecipes = async () => {\n    var _nutritionData$calori, _nutritionData$protei, _nutritionData$carbs, _nutritionData$fat;\n    if (ingredients.length === 0) return;\n    const nutritionResponse = await fetch(`https://api.spoonacular.com/recipes/guessNutrition?title=${ingredients.join(',')}&apiKey=${SPOONACULAR_API_KEY}`);\n    const nutritionData = await nutritionResponse.json();\n    setNutritionData({\n      calories: ((_nutritionData$calori = nutritionData.calories) === null || _nutritionData$calori === void 0 ? void 0 : _nutritionData$calori.value) || 0,\n      protein: ((_nutritionData$protei = nutritionData.protein) === null || _nutritionData$protei === void 0 ? void 0 : _nutritionData$protei.value) || 0,\n      carbs: ((_nutritionData$carbs = nutritionData.carbs) === null || _nutritionData$carbs === void 0 ? void 0 : _nutritionData$carbs.value) || 0,\n      fats: ((_nutritionData$fat = nutritionData.fat) === null || _nutritionData$fat === void 0 ? void 0 : _nutritionData$fat.value) || 0\n    });\n    const recipeResponse = await fetch(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredients.join(',')}&number=5&apiKey=${SPOONACULAR_API_KEY}`);\n    const recipes = await recipeResponse.json();\n    const detailedRecipes = await Promise.all(recipes.map(async recipe => {\n      const detailsResponse = await fetch(`https://api.spoonacular.com/recipes/${recipe.id}/information?apiKey=${SPOONACULAR_API_KEY}`);\n      const details = await detailsResponse.json();\n      return {\n        title: details.title,\n        sourceUrl: details.sourceUrl\n      };\n    }));\n    setRecipeSuggestions(detailedRecipes);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Manage Your Nutrition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Input your favorite ingredients or available foods:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Enter an ingredient\",\n        className: \"flip-card__input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addIngredient,\n        className: \"flip-card__btn\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IngredientList, {\n      children: ingredients.map((ing, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ing\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchNutritionAndRecipes,\n      className: \"flip-card__btn\",\n      children: \"Analyze Diet & Get Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), nutritionData && /*#__PURE__*/_jsxDEV(NutritionSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Nutritional Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: {\n          labels: ['Protein', 'Carbs', 'Fats'],\n          datasets: [{\n            data: [nutritionData.protein, nutritionData.carbs, nutritionData.fats],\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), recipeSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(RecipeSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Recipe Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipeSuggestions.map((recipe, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: recipe.sourceUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Diet, \"QYY1VRcani1nqeT8XloqyQ51SMc=\");\n_c = Diet;\nexport default Diet;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #f5f5f5;\n  text-align: center;\n`;\n_c2 = Wrapper;\nconst InputSection = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n_c3 = InputSection;\nconst IngredientList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin-bottom: 20px;\n\n  li {\n    font-size: 18px;\n    padding: 5px;\n  }\n`;\n_c4 = IngredientList;\nconst NutritionSection = styled.div`\n  margin-top: 20px;\n`;\n_c5 = NutritionSection;\nconst RecipeSection = styled.div`\n  margin-top: 20px;\n`;\n_c6 = RecipeSection;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Diet\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"InputSection\");\n$RefreshReg$(_c4, \"IngredientList\");\n$RefreshReg$(_c5, \"NutritionSection\");\n$RefreshReg$(_c6, \"RecipeSection\");","map":{"version":3,"names":["React","useState","useNavigate","styled","Pie","jsxDEV","_jsxDEV","SPOONACULAR_API_KEY","Diet","_s","ingredients","setIngredients","input","setInput","nutritionData","setNutritionData","missingNutrients","setMissingNutrients","recipeSuggestions","setRecipeSuggestions","addIngredient","trim","fetchNutritionAndRecipes","_nutritionData$calori","_nutritionData$protei","_nutritionData$carbs","_nutritionData$fat","length","nutritionResponse","fetch","join","json","calories","value","protein","carbs","fats","fat","recipeResponse","recipes","detailedRecipes","Promise","all","map","recipe","detailsResponse","id","details","title","sourceUrl","Wrapper","children","className","fileName","_jsxFileName","lineNumber","columnNumber","InputSection","type","onChange","e","target","placeholder","onClick","IngredientList","ing","idx","NutritionSection","data","labels","datasets","backgroundColor","RecipeSection","href","rel","_c","div","_c2","_c3","ul","_c4","_c5","_c6","$RefreshReg$"],"sources":["/home/p/490/app/front/src/components/Diet.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Pie } from 'react-chartjs-2';\n\nconst SPOONACULAR_API_KEY = 'YOUR_SPOONACULAR_API_KEY';\n\nconst Diet = () => {\n  const [ingredients, setIngredients] = useState([]);\n  const [input, setInput] = useState('');\n  const [nutritionData, setNutritionData] = useState(null);\n  const [missingNutrients, setMissingNutrients] = useState([]);\n  const [recipeSuggestions, setRecipeSuggestions] = useState([]);\n  \n  // Add ingredient\n  const addIngredient = () => {\n    if (input.trim() !== '') {\n      setIngredients([...ingredients, input.trim()]);\n      setInput('');\n    }\n  };\n  \n  // Fetch nutritional data and recipes from Spoonacular\n  const fetchNutritionAndRecipes = async () => {\n    if (ingredients.length === 0) return;\n    \n    const nutritionResponse = await fetch(`https://api.spoonacular.com/recipes/guessNutrition?title=${ingredients.join(',')}&apiKey=${SPOONACULAR_API_KEY}`);\n    const nutritionData = await nutritionResponse.json();\n    setNutritionData({\n      calories: nutritionData.calories?.value || 0,\n      protein: nutritionData.protein?.value || 0,\n      carbs: nutritionData.carbs?.value || 0,\n      fats: nutritionData.fat?.value || 0,\n    });\n    \n    const recipeResponse = await fetch(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredients.join(',')}&number=5&apiKey=${SPOONACULAR_API_KEY}`);\n    const recipes = await recipeResponse.json();\n\n    const detailedRecipes = await Promise.all(\n      recipes.map(async (recipe) => {\n        const detailsResponse = await fetch(`https://api.spoonacular.com/recipes/${recipe.id}/information?apiKey=${SPOONACULAR_API_KEY}`);\n        const details = await detailsResponse.json();\n        return { title: details.title, sourceUrl: details.sourceUrl };\n      })\n    );\n    \n    setRecipeSuggestions(detailedRecipes);\n  };\n  \n  return (\n    <Wrapper>\n      <h1 className=\"title\">Manage Your Nutrition</h1>\n      <p>Input your favorite ingredients or available foods:</p>\n      <InputSection>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter an ingredient\"\n          className=\"flip-card__input\"\n        />\n        <button onClick={addIngredient} className=\"flip-card__btn\">Add</button>\n      </InputSection>\n      <IngredientList>\n        {ingredients.map((ing, idx) => (\n          <li key={idx}>{ing}</li>\n        ))}\n      </IngredientList>\n      <button onClick={fetchNutritionAndRecipes} className=\"flip-card__btn\">Analyze Diet & Get Recipes</button>\n      \n      {nutritionData && (\n        <NutritionSection>\n          <h2 className=\"title\">Nutritional Summary</h2>\n          <Pie\n            data={{\n              labels: ['Protein', 'Carbs', 'Fats'],\n              datasets: [{\n                data: [nutritionData.protein, nutritionData.carbs, nutritionData.fats],\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n              }],\n            }}\n          />\n        </NutritionSection>\n      )}\n      \n      {recipeSuggestions.length > 0 && (\n        <RecipeSection>\n          <h2 className=\"title\">Recipe Suggestions</h2>\n          <ul>\n            {recipeSuggestions.map((recipe, idx) => (\n              <li key={idx}>\n                <a href={recipe.sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\">{recipe.title}</a>\n              </li>\n            ))}\n          </ul>\n        </RecipeSection>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Diet;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #f5f5f5;\n  text-align: center;\n`;\n\nconst InputSection = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nconst IngredientList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin-bottom: 20px;\n\n  li {\n    font-size: 18px;\n    padding: 5px;\n  }\n`;\n\nconst NutritionSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst RecipeSection = styled.div`\n  margin-top: 20px;\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/p/490/app/front/src/components/Diet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Pie } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SPOONACULAR_API_KEY = 'YOUR_SPOONACULAR_API_KEY';\nconst Diet = () => {\n  _s();\n  const navigate = useNavigate();\n  const [ingredients, setIngredients] = useState([]);\n  const [input, setInput] = useState('');\n  const [nutritionData, setNutritionData] = useState(null);\n  const [missingNutrients, setMissingNutrients] = useState([]);\n  const [recipeSuggestions, setRecipeSuggestions] = useState([]);\n\n  // Add ingredient\n  const addIngredient = () => {\n    if (input.trim() !== '') {\n      setIngredients([...ingredients, input.trim()]);\n      setInput('');\n    }\n  };\n\n  // Fetch nutritional data and recipes from Spoonacular\n  const fetchNutritionAndRecipes = async () => {\n    var _nutritionData$calori, _nutritionData$protei, _nutritionData$carbs, _nutritionData$fat;\n    if (ingredients.length === 0) return;\n    const nutritionResponse = await fetch(`https://api.spoonacular.com/recipes/guessNutrition?title=${ingredients.join(',')}&apiKey=${SPOONACULAR_API_KEY}`);\n    const nutritionData = await nutritionResponse.json();\n    setNutritionData({\n      calories: ((_nutritionData$calori = nutritionData.calories) === null || _nutritionData$calori === void 0 ? void 0 : _nutritionData$calori.value) || 0,\n      protein: ((_nutritionData$protei = nutritionData.protein) === null || _nutritionData$protei === void 0 ? void 0 : _nutritionData$protei.value) || 0,\n      carbs: ((_nutritionData$carbs = nutritionData.carbs) === null || _nutritionData$carbs === void 0 ? void 0 : _nutritionData$carbs.value) || 0,\n      fats: ((_nutritionData$fat = nutritionData.fat) === null || _nutritionData$fat === void 0 ? void 0 : _nutritionData$fat.value) || 0\n    });\n    const recipeResponse = await fetch(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredients.join(',')}&number=5&apiKey=${SPOONACULAR_API_KEY}`);\n    const recipes = await recipeResponse.json();\n    const detailedRecipes = await Promise.all(recipes.map(async recipe => {\n      const detailsResponse = await fetch(`https://api.spoonacular.com/recipes/${recipe.id}/information?apiKey=${SPOONACULAR_API_KEY}`);\n      const details = await detailsResponse.json();\n      return {\n        title: details.title,\n        sourceUrl: details.sourceUrl\n      };\n    }));\n    setRecipeSuggestions(detailedRecipes);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Your Nutrition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Input your favorite ingredients or available foods:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Enter an ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addIngredient,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IngredientList, {\n      children: ingredients.map((ing, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ing\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchNutritionAndRecipes,\n      children: \"Analyze Diet & Get Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), nutritionData && /*#__PURE__*/_jsxDEV(NutritionSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nutritional Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: {\n          labels: ['Protein', 'Carbs', 'Fats'],\n          datasets: [{\n            data: [nutritionData.protein, nutritionData.carbs, nutritionData.fats],\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Missing Nutrients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: missingNutrients.length > 0 ? missingNutrients.map((nutrient, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: nutrient\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You're getting all required nutrients!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), recipeSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(RecipeSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recipe Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipeSuggestions.map((recipe, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: recipe.sourceUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Diet, \"p9E5h8JuDADs3awwNgFMO352Sm8=\", false, function () {\n  return [useNavigate];\n});\n_c = Diet;\nexport default Diet;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #f5f5f5;\n  text-align: center;\n`;\n_c2 = Container;\nconst InputSection = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n\n  input {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n  }\n\n  button {\n    padding: 10px;\n    border-radius: 5px;\n    background-color: #323232;\n    color: white;\n    cursor: pointer;\n  }\n`;\n_c3 = InputSection;\nconst IngredientList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin-bottom: 20px;\n\n  li {\n    font-size: 18px;\n    padding: 5px;\n  }\n`;\n_c4 = IngredientList;\nconst NutritionSection = styled.div`\n  margin-top: 20px;\n`;\n_c5 = NutritionSection;\nconst RecipeSection = styled.div`\n  margin-top: 20px;\n`;\n_c6 = RecipeSection;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Diet\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"InputSection\");\n$RefreshReg$(_c4, \"IngredientList\");\n$RefreshReg$(_c5, \"NutritionSection\");\n$RefreshReg$(_c6, \"RecipeSection\");","map":{"version":3,"names":["React","useState","useNavigate","styled","Pie","Chart","jsxDEV","_jsxDEV","SPOONACULAR_API_KEY","Diet","_s","navigate","ingredients","setIngredients","input","setInput","nutritionData","setNutritionData","missingNutrients","setMissingNutrients","recipeSuggestions","setRecipeSuggestions","addIngredient","trim","fetchNutritionAndRecipes","_nutritionData$calori","_nutritionData$protei","_nutritionData$carbs","_nutritionData$fat","length","nutritionResponse","fetch","join","json","calories","value","protein","carbs","fats","fat","recipeResponse","recipes","detailedRecipes","Promise","all","map","recipe","detailsResponse","id","details","title","sourceUrl","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","InputSection","type","onChange","e","target","placeholder","onClick","IngredientList","ing","idx","NutritionSection","data","labels","datasets","backgroundColor","nutrient","RecipeSection","href","rel","_c","div","_c2","_c3","ul","_c4","_c5","_c6","$RefreshReg$"],"sources":["/home/p/490/app/front/src/components/Diet.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Pie } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\n\nconst SPOONACULAR_API_KEY = 'YOUR_SPOONACULAR_API_KEY';\n\nconst Diet = () => {\n  const navigate = useNavigate();\n  const [ingredients, setIngredients] = useState([]);\n  const [input, setInput] = useState('');\n  const [nutritionData, setNutritionData] = useState(null);\n  const [missingNutrients, setMissingNutrients] = useState([]);\n  const [recipeSuggestions, setRecipeSuggestions] = useState([]);\n  \n  // Add ingredient\n  const addIngredient = () => {\n    if (input.trim() !== '') {\n      setIngredients([...ingredients, input.trim()]);\n      setInput('');\n    }\n  };\n  \n  // Fetch nutritional data and recipes from Spoonacular\n  const fetchNutritionAndRecipes = async () => {\n    if (ingredients.length === 0) return;\n    \n    const nutritionResponse = await fetch(`https://api.spoonacular.com/recipes/guessNutrition?title=${ingredients.join(',')}&apiKey=${SPOONACULAR_API_KEY}`);\n    const nutritionData = await nutritionResponse.json();\n    setNutritionData({\n      calories: nutritionData.calories?.value || 0,\n      protein: nutritionData.protein?.value || 0,\n      carbs: nutritionData.carbs?.value || 0,\n      fats: nutritionData.fat?.value || 0,\n    });\n    \n    const recipeResponse = await fetch(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredients.join(',')}&number=5&apiKey=${SPOONACULAR_API_KEY}`);\n    const recipes = await recipeResponse.json();\n\n    const detailedRecipes = await Promise.all(\n      recipes.map(async (recipe) => {\n        const detailsResponse = await fetch(`https://api.spoonacular.com/recipes/${recipe.id}/information?apiKey=${SPOONACULAR_API_KEY}`);\n        const details = await detailsResponse.json();\n        return { title: details.title, sourceUrl: details.sourceUrl };\n      })\n    );\n    \n    setRecipeSuggestions(detailedRecipes);\n  };\n  \n  return (\n    <Container>\n      <h1>Manage Your Nutrition</h1>\n      <p>Input your favorite ingredients or available foods:</p>\n      <InputSection>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter an ingredient\"\n        />\n        <button onClick={addIngredient}>Add</button>\n      </InputSection>\n      <IngredientList>\n        {ingredients.map((ing, idx) => (\n          <li key={idx}>{ing}</li>\n        ))}\n      </IngredientList>\n      <button onClick={fetchNutritionAndRecipes}>Analyze Diet & Get Recipes</button>\n      \n      {nutritionData && (\n        <NutritionSection>\n          <h2>Nutritional Summary</h2>\n          <Pie\n            data={{\n              labels: ['Protein', 'Carbs', 'Fats'],\n              datasets: [{\n                data: [nutritionData.protein, nutritionData.carbs, nutritionData.fats],\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n              }],\n            }}\n          />\n          <h3>Missing Nutrients</h3>\n          <ul>\n            {missingNutrients.length > 0 ? missingNutrients.map((nutrient, idx) => (\n              <li key={idx}>{nutrient}</li>\n            )) : <p>You're getting all required nutrients!</p>}\n          </ul>\n        </NutritionSection>\n      )}\n      \n      {recipeSuggestions.length > 0 && (\n        <RecipeSection>\n          <h2>Recipe Suggestions</h2>\n          <ul>\n            {recipeSuggestions.map((recipe, idx) => (\n              <li key={idx}>\n                <a href={recipe.sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\">{recipe.title}</a>\n              </li>\n            ))}\n          </ul>\n        </RecipeSection>\n      )}\n    </Container>\n  );\n};\n\nexport default Diet;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n  background-color: #f5f5f5;\n  text-align: center;\n`;\n\nconst InputSection = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n\n  input {\n    padding: 10px;\n    border: 2px solid #323232;\n    border-radius: 5px;\n    font-size: 16px;\n  }\n\n  button {\n    padding: 10px;\n    border-radius: 5px;\n    background-color: #323232;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nconst IngredientList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin-bottom: 20px;\n\n  li {\n    font-size: 18px;\n    padding: 5px;\n  }\n`;\n\nconst NutritionSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst RecipeSection = styled.div`\n  margin-top: 20px;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,mBAAmB,GAAG,0BAA0B;AAEtD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACA,MAAMqB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIR,KAAK,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBV,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEE,KAAK,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;MAC9CR,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;;EAED;EACA,MAAMS,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,qBAAA,EAAAC,qBAAA,EAAAC,oBAAA,EAAAC,kBAAA;IAC3C,IAAIhB,WAAW,CAACiB,MAAM,KAAK,CAAC,EAAE;IAE9B,MAAMC,iBAAiB,GAAG,MAAMC,KAAK,CAAC,4DAA4DnB,WAAW,CAACoB,IAAI,CAAC,GAAG,CAAC,WAAWxB,mBAAmB,EAAE,CAAC;IACxJ,MAAMQ,aAAa,GAAG,MAAMc,iBAAiB,CAACG,IAAI,CAAC,CAAC;IACpDhB,gBAAgB,CAAC;MACfiB,QAAQ,EAAE,EAAAT,qBAAA,GAAAT,aAAa,CAACkB,QAAQ,cAAAT,qBAAA,uBAAtBA,qBAAA,CAAwBU,KAAK,KAAI,CAAC;MAC5CC,OAAO,EAAE,EAAAV,qBAAA,GAAAV,aAAa,CAACoB,OAAO,cAAAV,qBAAA,uBAArBA,qBAAA,CAAuBS,KAAK,KAAI,CAAC;MAC1CE,KAAK,EAAE,EAAAV,oBAAA,GAAAX,aAAa,CAACqB,KAAK,cAAAV,oBAAA,uBAAnBA,oBAAA,CAAqBQ,KAAK,KAAI,CAAC;MACtCG,IAAI,EAAE,EAAAV,kBAAA,GAAAZ,aAAa,CAACuB,GAAG,cAAAX,kBAAA,uBAAjBA,kBAAA,CAAmBO,KAAK,KAAI;IACpC,CAAC,CAAC;IAEF,MAAMK,cAAc,GAAG,MAAMT,KAAK,CAAC,qEAAqEnB,WAAW,CAACoB,IAAI,CAAC,GAAG,CAAC,oBAAoBxB,mBAAmB,EAAE,CAAC;IACvK,MAAMiC,OAAO,GAAG,MAAMD,cAAc,CAACP,IAAI,CAAC,CAAC;IAE3C,MAAMS,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAG,CACvCH,OAAO,CAACI,GAAG,CAAC,MAAOC,MAAM,IAAK;MAC5B,MAAMC,eAAe,GAAG,MAAMhB,KAAK,CAAC,uCAAuCe,MAAM,CAACE,EAAE,uBAAuBxC,mBAAmB,EAAE,CAAC;MACjI,MAAMyC,OAAO,GAAG,MAAMF,eAAe,CAACd,IAAI,CAAC,CAAC;MAC5C,OAAO;QAAEiB,KAAK,EAAED,OAAO,CAACC,KAAK;QAAEC,SAAS,EAAEF,OAAO,CAACE;MAAU,CAAC;IAC/D,CAAC,CACH,CAAC;IAED9B,oBAAoB,CAACqB,eAAe,CAAC;EACvC,CAAC;EAED,oBACEnC,OAAA,CAAC6C,SAAS;IAAAC,QAAA,gBACR9C,OAAA;MAAA8C,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BlD,OAAA;MAAA8C,QAAA,EAAG;IAAmD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1DlD,OAAA,CAACmD,YAAY;MAAAL,QAAA,gBACX9C,OAAA;QACEoD,IAAI,EAAC,MAAM;QACXxB,KAAK,EAAErB,KAAM;QACb8C,QAAQ,EAAGC,CAAC,IAAK9C,QAAQ,CAAC8C,CAAC,CAACC,MAAM,CAAC3B,KAAK,CAAE;QAC1C4B,WAAW,EAAC;MAAqB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFlD,OAAA;QAAQyD,OAAO,EAAE1C,aAAc;QAAA+B,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACflD,OAAA,CAAC0D,cAAc;MAAAZ,QAAA,EACZzC,WAAW,CAACiC,GAAG,CAAC,CAACqB,GAAG,EAAEC,GAAG,kBACxB5D,OAAA;QAAA8C,QAAA,EAAea;MAAG,GAATC,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eACjBlD,OAAA;MAAQyD,OAAO,EAAExC,wBAAyB;MAAA6B,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE7EzC,aAAa,iBACZT,OAAA,CAAC6D,gBAAgB;MAAAf,QAAA,gBACf9C,OAAA;QAAA8C,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BlD,OAAA,CAACH,GAAG;QACFiE,IAAI,EAAE;UACJC,MAAM,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC;UACpCC,QAAQ,EAAE,CAAC;YACTF,IAAI,EAAE,CAACrD,aAAa,CAACoB,OAAO,EAAEpB,aAAa,CAACqB,KAAK,EAAErB,aAAa,CAACsB,IAAI,CAAC;YACtEkC,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;UACnD,CAAC;QACH;MAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFlD,OAAA;QAAA8C,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BlD,OAAA;QAAA8C,QAAA,EACGnC,gBAAgB,CAACW,MAAM,GAAG,CAAC,GAAGX,gBAAgB,CAAC2B,GAAG,CAAC,CAAC4B,QAAQ,EAAEN,GAAG,kBAChE5D,OAAA;UAAA8C,QAAA,EAAeoB;QAAQ,GAAdN,GAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAC7B,CAAC,gBAAGlD,OAAA;UAAA8C,QAAA,EAAG;QAAsC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CACnB,EAEArC,iBAAiB,CAACS,MAAM,GAAG,CAAC,iBAC3BtB,OAAA,CAACmE,aAAa;MAAArB,QAAA,gBACZ9C,OAAA;QAAA8C,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BlD,OAAA;QAAA8C,QAAA,EACGjC,iBAAiB,CAACyB,GAAG,CAAC,CAACC,MAAM,EAAEqB,GAAG,kBACjC5D,OAAA;UAAA8C,QAAA,eACE9C,OAAA;YAAGoE,IAAI,EAAE7B,MAAM,CAACK,SAAU;YAACW,MAAM,EAAC,QAAQ;YAACc,GAAG,EAAC,qBAAqB;YAAAvB,QAAA,EAAEP,MAAM,CAACI;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GADhFU,GAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAChB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAC/C,EAAA,CAlGID,IAAI;EAAA,QACSP,WAAW;AAAA;AAAA2E,EAAA,GADxBpE,IAAI;AAoGV,eAAeA,IAAI;AAEnB,MAAM2C,SAAS,GAAGjD,MAAM,CAAC2E,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GATI3B,SAAS;AAWf,MAAMM,YAAY,GAAGvD,MAAM,CAAC2E,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GAnBItB,YAAY;AAqBlB,MAAMO,cAAc,GAAG9D,MAAM,CAAC8E,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GATIjB,cAAc;AAWpB,MAAMG,gBAAgB,GAAGjE,MAAM,CAAC2E,GAAG;AACnC;AACA,CAAC;AAACK,GAAA,GAFIf,gBAAgB;AAItB,MAAMM,aAAa,GAAGvE,MAAM,CAAC2E,GAAG;AAChC;AACA,CAAC;AAACM,GAAA,GAFIV,aAAa;AAAA,IAAAG,EAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}